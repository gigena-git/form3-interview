version: '3.9'
networks:
  form3:
    driver: bridge

services:
  accountapi:
    container_name: accountapi
    image: form3tech/interview-accountapi:v1.0.0-46-gb3b6c766
    restart: on-failure
    depends_on:
      postgresql:
        condition: service_healthy
      vault:
        condition: service_started
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=8fb95528-57c6-422e-9722-d2147bcba8ed
      - PSQL_USER=root
      - PSQL_PASSWORD=password
      - PSQL_HOST=postgresql
      - PSQL_PORT=5432
      - STACK_NAME=f3-interview-accountapi
      - DATABASE-HOST=postgresql
      - DATABASE-SSL-MODE=disable
      - DATABASE-USERNAME=interview_accountapi_user
      - DATABASE-PASSWORD=123
    ports:
      - 8080:8080
    networks:
      - form3
  postgresql:
    container_name: postgresql
    image: postgres:9.5-alpine
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
    volumes:
      - ./scripts/db:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432
    networks:
      - form3
  vault:
    container_name: vault
    image: vault:1.6.3
    environment:
      - SKIP_SETCAP=1
      - VAULT_DEV_ROOT_TOKEN_ID=8fb95528-57c6-422e-9722-d2147bcba8ed
    networks:
      - form3
  # Testing container.
  form3-interview:
    container_name: form3-interview
    image: golang:1.18
    entrypoint: /go/src/app/build-and-test.sh
    volumes:
      - .:/go/src/app
    depends_on:
      accountapi:
        condition: service_started
    environment:
      - SERVER_PATH=http://accountapi:8080
    networks:
      - form3